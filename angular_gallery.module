<?php

/**
 * Implements hook_menu().
 */
function angular_gallery_menu() {
  $items['gallery'] = array(
    'title' => 'Demo gallery',
    'page callback' => 'angular_gallery_gallery_page',
    'access arguments' => array('access content'),
  );
  return $items;
}

function angular_gallery_gallery_page() {

  drupal_add_css(drupal_get_path('module', 'angular_gallery') . '/css/angular_gallery.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  drupal_add_css(drupal_get_path('module', 'angular_gallery') . '/css/colorbox.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));

  drupal_add_js('http://cdnjs.cloudflare.com/ajax/libs/masonry/3.3.2/masonry.pkgd.min.js', 'external');
  drupal_add_js('https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular.min.js', 'external');

  drupal_add_js(drupal_get_path('module', 'angular_gallery') . '/js/angular-masonry.js');
  drupal_add_js(drupal_get_path('module', 'angular_gallery') . '/js/jquery.colorbox.js');
  drupal_add_js(drupal_get_path('module', 'angular_gallery') . '/js/jquery.lazyload.js');
  drupal_add_js(drupal_get_path('module', 'angular_gallery') . '/js/angular_gallery.js');

  $output = array();

  $output['app'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'ng-app' => 'angular_gallery',
    ),
  );

  $output['app']['controller'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'ng-controller' => 'GalleryController'
    ),
  );

  $output['app']['controller']['images'] = array(
    '#type' => 'markup',
    '#markup' => '
<div masonry load-images="false" class="angular-gallery-list">
    <div class="masonry-brick angular-gallery-brick" ng-repeat="img in images" data-category="{{img.image.category}}">
      <a class="angular-gallery-image" href="{{img.image.original_image}}" style="width: {{img.image.width}}px; height: {{img.image.height}}px; display: block;">
      <img class="lazy" data-original="{{img.image.image}}" width="{{img.image.width}}" height="{{img.image.height}}" />
     </a>
    </div>
</div>
    ',
  );

  return $output;
}

/**
 * Implements hook_preprocess_views_views_json_style_simple().
 */
function angular_gallery_preprocess_views_views_json_style_simple(&$vars) {
  if ($vars['rows']['view']['name'] == 'gallery_view') {
    $voc = taxonomy_vocabulary_machine_name_load('image_categories');
    $categories = taxonomy_get_tree($voc->vid, 0 , NULL, TRUE);
    $vars['rows']['categories'] = array();

    foreach ($categories as $key => $cat) {
      $vars['rows']['categories'][] = array(
        'tid' => '[' . $cat->tid . ']',
        'name' => $cat->name,
      );
    }

    foreach ($vars['rows']['images'] as $key => $image) {
      $imageprops = image_get_info(_custom_generate_image_style('gallery_229', $image['image']['uri']));
      $vars['rows']['images'][$key]['image']['width'] = $imageprops['width'];
      $vars['rows']['images'][$key]['image']['height'] = $imageprops['height'];
      $vars['rows']['images'][$key]['image']['category'] = array_map('trim', explode(',', $image['image']['category']));
    }
  }
}

function _custom_generate_image_style($style_name, $imageuri) {
  if (!empty($imageuri)) {
    $style_path = image_style_path($style_name, $imageuri);
    if (!file_exists($style_path)) {
      image_style_create_derivative(image_style_load($style_name), $imageuri, $style_path);
    }
  }
  return $style_path;
}
